name: simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f450; export ODOMETRY_TYPE=hector; export WORLD_NAME=simulation
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=forest gui:=true
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForRos; roslaunch mrs_status status.launch
        - export UAV_NAME=uav2; waitForRos; roslaunch mrs_status status.launch
        - export UAV_NAME=uav3; waitForRos; roslaunch mrs_status status.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosrun mrs_simulation spawn 1 --$UAV_TYPE --run --delete --enable-rangefinder --enable-bluefox-camera --enable-rplidar
        - waitForSimulation; rosrun mrs_simulation spawn 2 --$UAV_TYPE --run --delete --enable-rangefinder --enable-bluefox-camera --enable-rplidar
        - waitForSimulation; rosrun mrs_simulation spawn 3 --$UAV_TYPE --run --delete --enable-rangefinder --enable-bluefox-camera --enable-rplidar
  - optic_flow:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_optic_flow optic_flow.launch
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_optic_flow optic_flow.launch
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_optic_flow optic_flow.launch
  - hector_slam:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch hector_mapping uav.launch
        - export UAV_NAME=uav2; waitForOdometry; roslaunch hector_mapping uav.launch
        - export UAV_NAME=uav3; waitForOdometry; roslaunch hector_mapping uav.launch
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_general core.launch config_uav_manager:=custom_configs/uav_manager.yaml custom_config_odometry:=custom_configs/odometry.yaml DEBUG:=true
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_general core.launch config_uav_manager:=custom_configs/uav_manager.yaml custom_config_odometry:=custom_configs/odometry.yaml DEBUG:=true
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_general core.launch config_uav_manager:=custom_configs/uav_manager.yaml custom_config_odometry:=custom_configs/odometry.yaml DEBUG:=true
  - bumper:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_bumper bumper.launch
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_bumper bumper.launch
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_bumper bumper.launch
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForRos; roslaunch mrs_general automatic_start.launch
        - export UAV_NAME=uav2; waitForRos; roslaunch mrs_general automatic_start.launch
        - export UAV_NAME=uav3; waitForRos; roslaunch mrs_general automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav3
        - 'export UAV_NAME=uav3;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - goto:
      layout: tiled
      synchronize: after
      panes:
        - 'export UAV_NAME=uav1;
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[10.0, 0.0, 3.0, 0.0\]\";
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[-10.0, 0.0, 3.0, 0.0\]\"'
        - 'export UAV_NAME=uav2;
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[-10.0, 0.0, 3.0, 0.0\]\";
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[10.0, 0.0, 3.0, 0.0\]\"'
        - 'export UAV_NAME=uav3;
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, 10.0, 3.0, 0.0\]\";
          history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, -10.0, 3.0, 0.0\]\"'
  - gazebo_camera_follow:
      layout: tiled
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
